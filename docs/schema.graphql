"""
A DateTime scalar type represents textual data, formatted as an ISO8601 date-time.
"""
scalar DateTime

type Deposit {
  """The identifier of the deposit."""
  id: UUID!

  """The moment this deposit was created."""
  creationTimestamp: DateTime!

  """The state of the deposit."""
  state: State
  depositor: DepositorConnection!
}

type DepositorConnection {
  """The EASY account of the depositor."""
  depositorId: String!

  """Get the technical metadata of the deposits from the given depositor."""
  deposit: [Deposit!]!
}

type Mutation {
  """Register a new deposit with 'id', 'creationTimestamp' and 'depositId'."""
  registerDeposit(id: UUID!, creationTimestamp: DateTime!, depositorId: String!): Deposit

  """Update the state of the deposit identified by 'id'."""
  updateState(id: UUID!, label: StateLabel!, description: String!): Deposit
}

type Query {
  """List all registered deposits."""
  deposits: [Deposit!]!

  """Get the technical metadata of the deposit identified by 'id'."""
  deposit(id: UUID!): Deposit

  """Select a depositor."""
  depositor(depositor: String!): DepositorConnection!

  """Lists all deposits with the given state label."""
  depositsWithState(label: StateLabel!): [Deposit!]!
}

"""The state of the deposit."""
type State {
  """The state label of the deposit."""
  label: StateLabel!

  """Additional information about the state."""
  description: String!
  deposit: [Deposit!]!
}

enum StateLabel {
  FEDORA_ARCHIVED
  ARCHIVED
  IN_REVIEW
  FAILED
  REJECTED
  SUBMITTED
  INVALID
  FINALIZING
  DRAFT
}

"""
The UUID scalar type represents textual data, formatted as a universally unique identifier.
"""
scalar UUID

